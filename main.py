import sys
import logging
import flet as ft

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

def run_console_scan(target_url: str, scan_mode: str = 'fast'):
    """–ó–∞–ø—É—Å–∫ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ"""
    from core.scanner import ZapScanner
    from core.report import generate_html_report

    scanner = ZapScanner()

    if not scanner.is_ready():
        print("‚ùå ZAP –Ω–µ –∑–∞–ø—É—â–µ–Ω. –í—ã–ø–æ–ª–Ω–∏: docker-compose up -d")
        sys.exit(1)

    print(f"üîç –°–∫–∞–Ω–∏—Ä—É—é —Å–∞–π—Ç: {target_url} –≤ —Ä–µ–∂–∏–º–µ '{scan_mode}'")
    vulnerabilities = scanner.scan(target_url, scan_mode=scan_mode)

    report_path = generate_html_report()
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π: {len(vulnerabilities)}")
    print(f"üìÑ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {report_path}")

    for v in vulnerabilities[:3]:  # –ø–µ—Ä–≤—ã–µ 3 —É—è–∑–≤–∏–º–æ—Å—Ç–∏
        print(f"[{v['risk']}] {v['name']} ‚Üí {v['url']}")

def show_help():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"""
    print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
    print("  python main.py <URL>          ‚Üí —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª–∏")
    print("  python main.py --gui          ‚Üí –∑–∞–ø—É—Å–∫ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    print("  python main.py --help         ‚Üí —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞")
    print("")
    print("–†–µ–∂–∏–º—ã —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("  python main.py <URL> fast     ‚Üí –±—ã—Å—Ç—Ä–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (3-5 –º–∏–Ω")
    print("  python main.py <URL> medium   ‚Üí —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (10-15 –º–∏–Ω")
    print("  python main.py <URL> deep     ‚Üí –ø–æ–ª–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (25-30 –º–∏–Ω")

def main():
    if len(sys.argv) == 1:
        show_help()
        sys.exit(1)

    if sys.argv[1] in ("--help", "-h"):
        show_help()
        return

    if sys.argv[1] == "--gui":
        # –ó–∞–ø—É—Å–∫ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        try:
            from interface.flet_ui import main as flet_main
            print("üöÄ –ó–∞–ø—É—Å–∫ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
            ft.app(target=flet_main)
        except ImportError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Flet UI: {e}")
            print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª interface/flet_ui.py —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫ –≤–µ—Ä–Ω–∞.")
            sys.exit(1)
        except Exception as e:
            print(f"üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ GUI: {e}")
            sys.exit(1)
    else:
        # –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
        target = sys.argv[1]

        #  –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–µ–∂–∏–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        scan_mode = 'fast'
        if len(sys.argv) >= 3:
            mode = sys.argv[2].lower()
            if mode in ['fast', 'medium', 'deep']:
                scan_mode = mode
            else:
                print(f'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º {mode}, –∏—Å–ø–æ–ª—å–∑—É—é "fast"')
        run_console_scan(target, scan_mode)

if __name__ == "__main__":
    main()